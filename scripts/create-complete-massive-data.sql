-- ===========================================
-- SCRIPT PRINCIPAL - CR√âATION DONN√âES MASSIVES
-- ===========================================
-- Ce script ex√©cute tous les autres scripts dans le bon ordre
-- pour cr√©er un environnement de test complet avec 180 professeurs

-- ===========================================
-- CONFIGURATION ET V√âRIFICATIONS PR√âLIMINAIRES
-- ===========================================

DO $$
BEGIN
  RAISE NOTICE 'üöÄ D√âMARRAGE DE LA CR√âATION DES DONN√âES MASSIVES';
  RAISE NOTICE '‚è∞ Heure de d√©but: %', NOW();
  RAISE NOTICE '';
  
  -- V√©rifier que les tables existent
  IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'profiles') THEN
    RAISE EXCEPTION '‚ùå Table profiles non trouv√©e. Veuillez ex√©cuter les migrations d''abord.';
  END IF;
  
  IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'campus') THEN
    RAISE EXCEPTION '‚ùå Table campus non trouv√©e. Veuillez ex√©cuter les migrations d''abord.';
  END IF;
  
  IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'invoices') THEN
    RAISE EXCEPTION '‚ùå Table invoices non trouv√©e. Veuillez ex√©cuter les migrations d''abord.';
  END IF;
  
  RAISE NOTICE '‚úÖ V√©rifications pr√©liminaires OK';
  RAISE NOTICE '';
END $$;

-- ===========================================
-- NETTOYAGE (OPTIONNEL)
-- ===========================================

DO $$
DECLARE
  existing_teachers INTEGER;
  existing_invoices INTEGER;
BEGIN
  RAISE NOTICE '=== NETTOYAGE (OPTIONNEL) ===';
  
  -- Compter les donn√©es existantes
  SELECT COUNT(*) INTO existing_teachers FROM profiles WHERE role = 'ENSEIGNANT';
  SELECT COUNT(*) INTO existing_invoices FROM invoices;
  
  RAISE NOTICE 'üìä Donn√©es existantes:';
  RAISE NOTICE '  - Enseignants: %', existing_teachers;
  RAISE NOTICE '  - Factures: %', existing_invoices;
  
  IF existing_teachers > 0 OR existing_invoices > 0 THEN
    RAISE NOTICE '‚ö†Ô∏è  Des donn√©es existent d√©j√†.';
    RAISE NOTICE 'üí° Pour nettoyer, d√©commentez les lignes ci-dessous:';
    RAISE NOTICE '   -- DELETE FROM invoice_lines;';
    RAISE NOTICE '   -- DELETE FROM invoices;';
    RAISE NOTICE '   -- DELETE FROM profiles WHERE role = ''ENSEIGNANT'';';
    RAISE NOTICE '';
  END IF;
  
  -- D√©commenter ces lignes pour nettoyer
  -- DELETE FROM invoice_lines;
  -- DELETE FROM invoices;
  -- DELETE FROM profiles WHERE role = 'ENSEIGNANT';
  
END $$;

-- ===========================================
-- √âTAPE 1: CR√âATION DES 180 PROFESSEURS
-- ===========================================

DO $$
BEGIN
  RAISE NOTICE '=== √âTAPE 1: CR√âATION DES 180 PROFESSEURS ===';
  RAISE NOTICE '‚è±Ô∏è  D√©but: %', clock_timestamp();
END $$;

-- Inclure le script de cr√©ation des professeurs
\i scripts/create-180-professors.sql

DO $$
BEGIN
  RAISE NOTICE '‚úÖ √âtape 1 termin√©e √†: %', clock_timestamp();
  RAISE NOTICE '';
END $$;

-- ===========================================
-- √âTAPE 2: CR√âATION DES FACTURES R√âALISTES
-- ===========================================

DO $$
BEGIN
  RAISE NOTICE '=== √âTAPE 2: CR√âATION DES FACTURES R√âALISTES ===';
  RAISE NOTICE '‚è±Ô∏è  D√©but: %', clock_timestamp();
END $$;

-- Inclure le script de cr√©ation des factures
\i scripts/create-realistic-invoices.sql

DO $$
BEGIN
  RAISE NOTICE '‚úÖ √âtape 2 termin√©e √†: %', clock_timestamp();
  RAISE NOTICE '';
END $$;

-- ===========================================
-- √âTAPE 3: TESTS ET V√âRIFICATIONS
-- ===========================================

DO $$
BEGIN
  RAISE NOTICE '=== √âTAPE 3: TESTS ET V√âRIFICATIONS ===';
  RAISE NOTICE '‚è±Ô∏è  D√©but: %', clock_timestamp();
END $$;

-- Inclure le script de test
\i scripts/test-massive-data.sql

DO $$
BEGIN
  RAISE NOTICE '‚úÖ √âtape 3 termin√©e √†: %', clock_timestamp();
  RAISE NOTICE '';
END $$;

-- ===========================================
-- R√âSUM√â FINAL ET RECOMMANDATIONS
-- ===========================================

DO $$
DECLARE
  total_duration INTERVAL;
  start_time TIMESTAMP;
BEGIN
  start_time := clock_timestamp();
  
  RAISE NOTICE '=== R√âSUM√â FINAL ===';
  RAISE NOTICE '‚è∞ Heure de fin: %', NOW();
  
  RAISE NOTICE '';
  RAISE NOTICE 'üéØ PROCHAINES √âTAPES RECOMMAND√âES:';
  RAISE NOTICE '1. Tester le frontend avec ces donn√©es massives';
  RAISE NOTICE '2. V√©rifier les performances des requ√™tes';
  RAISE NOTICE '3. Tester le workflow complet (cr√©ation ‚Üí validation ‚Üí paiement)';
  RAISE NOTICE '4. Identifier et corriger les goulots d''√©tranglement';
  RAISE NOTICE '';
  
  RAISE NOTICE 'üîß COMMANDES UTILES:';
  RAISE NOTICE '-- Voir tous les professeurs: SELECT COUNT(*) FROM profiles WHERE role = ''ENSEIGNANT'';';
  RAISE NOTICE '-- Voir les factures par statut: SELECT status, COUNT(*) FROM invoices GROUP BY status;';
  RAISE NOTICE '-- Voir les montants par campus: SELECT c.name, SUM(i.total_amount) FROM campus c LEFT JOIN invoices i ON c.id = i.campus_id GROUP BY c.id, c.name;';
  RAISE NOTICE '';
  
  RAISE NOTICE 'üéâ CR√âATION DES DONN√âES MASSIVES TERMIN√âE !';
  
END $$;
